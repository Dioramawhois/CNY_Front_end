{"ast":null,"code":"var _jsxFileName = \"C:\\\\Soft\\\\My\\\\0.1\\\\front-end\\\\src\\\\components\\\\UserManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/UserManager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManager = () => {\n  _s();\n  const [users, setUsers] = useState([]); // Состояние для хранения списка пользователей\n  const [inputValue, setInputValue] = useState('');\n  const handleAddUser = () => {\n    if (inputValue.trim()) {\n      const newUsers = inputValue.split('\\n') // Разделяем ввод по строкам\n      .map((line, index) => ({\n        id: users.length + index + 1,\n        name: line.trim()\n      })).filter(user => user.name !== '');\n      setUsers([...users, ...newUsers]);\n      setInputValue('');\n    }\n  };\n  const handleDeleteUser = id => {\n    setUsers(users.filter(user => user.id !== id));\n  };\n  const handleDeleteAllUsers = () => {\n    const confirmDelete = window.confirm('Are you sure you want to delete all users?');\n    if (confirmDelete) {\n      setUsers([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter usernames or chat IDs, one per line\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-user-btn\",\n        onClick: handleAddUser,\n        children: \"Add User/Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-all-btn\",\n        onClick: handleDeleteAllUsers,\n        children: \"Delete All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"user-list\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => handleDeleteUser(user.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManager, \"B0QhoZeGz48Hs4opOSbiXV0p//Q=\");\n_c = UserManager;\nexport default UserManager;\nvar _c;\n$RefreshReg$(_c, \"UserManager\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserManager","_s","users","setUsers","inputValue","setInputValue","handleAddUser","trim","newUsers","split","map","line","index","id","length","name","filter","user","handleDeleteUser","handleDeleteAllUsers","confirmDelete","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Soft/My/0.1/front-end/src/components/UserManager.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/UserManager.css';\r\n\r\nconst UserManager = () => {\r\n  const [users, setUsers] = useState([]); // Состояние для хранения списка пользователей\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleAddUser = () => {\r\n    if (inputValue.trim()) {\r\n      const newUsers = inputValue\r\n        .split('\\n') // Разделяем ввод по строкам\r\n        .map((line, index) => ({ id: users.length + index + 1, name: line.trim() }))\r\n        .filter(user => user.name !== '');\r\n      setUsers([...users, ...newUsers]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = (id) => {\r\n    setUsers(users.filter(user => user.id !== id));\r\n  };\r\n\r\n  const handleDeleteAllUsers = () => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete all users?');\r\n    if (confirmDelete) {\r\n      setUsers([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-manager\">\r\n      <h2>User Management</h2>\r\n      <textarea\r\n        placeholder=\"Enter usernames or chat IDs, one per line\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n      />\r\n      <div className=\"button-group\">\r\n        <button className=\"add-user-btn\" onClick={handleAddUser}>\r\n          Add User/Chat\r\n        </button>\r\n        <button className=\"delete-all-btn\" onClick={handleDeleteAllUsers}>\r\n          Delete All Users\r\n        </button>\r\n      </div>\r\n\r\n      <ul className=\"user-list\">\r\n        {users.map((user) => (\r\n          <li key={user.id}>\r\n            {user.name}\r\n            <button className=\"delete-btn\" onClick={() => handleDeleteUser(user.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManager;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,EAAE;MACrB,MAAMC,QAAQ,GAAGJ,UAAU,CACxBK,KAAK,CAAC,IAAI,CAAC,CAAC;MAAA,CACZC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;QAAEC,EAAE,EAAEX,KAAK,CAACY,MAAM,GAAGF,KAAK,GAAG,CAAC;QAAEG,IAAI,EAAEJ,IAAI,CAACJ,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC,CAC3ES,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACF,IAAI,KAAK,EAAE,CAAC;MACnCZ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGM,QAAQ,CAAC,CAAC;MACjCH,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,MAAMa,gBAAgB,GAAIL,EAAE,IAAK;IAC/BV,QAAQ,CAACD,KAAK,CAACc,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAMM,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC;IAClF,IAAIF,aAAa,EAAE;MACjBjB,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKwB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BzB,OAAA;MAAAyB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB7B,OAAA;MACE8B,WAAW,EAAC,2CAA2C;MACvDC,KAAK,EAAE1B,UAAW;MAClB2B,QAAQ,EAAGC,CAAC,IAAK3B,aAAa,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BzB,OAAA;QAAQwB,SAAS,EAAC,cAAc;QAACW,OAAO,EAAE5B,aAAc;QAAAkB,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT7B,OAAA;QAAQwB,SAAS,EAAC,gBAAgB;QAACW,OAAO,EAAEf,oBAAqB;QAAAK,QAAA,EAAC;MAElE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN7B,OAAA;MAAIwB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBtB,KAAK,CAACQ,GAAG,CAAEO,IAAI,iBACdlB,OAAA;QAAAyB,QAAA,GACGP,IAAI,CAACF,IAAI,eACVhB,OAAA;UAAQwB,SAAS,EAAC,YAAY;UAACW,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAACD,IAAI,CAACJ,EAAE,CAAE;UAAAW,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFjFX,IAAI,CAACJ,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArDID,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAuDjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}